{"version":3,"file":"pagetransitions.modern.js","sources":["../src/store.ts","../src/context.ts","../src/usePageTransition.tsx","../src/utils.ts","../src/PageWrapper.tsx","../src/PageTransitions.tsx"],"sourcesContent":["import create from \"zustand/vanilla\";\nimport createHook from \"zustand\";\n\nexport enum TransitionState {\n  SUSPENDED = \"suspended\", // waiting to mount or suspended\n  APPEAR = \"appear\",\n  APPEARING = \"appearing\",\n  APPEARED = \"appeared\",\n  EXIT = \"exit\",\n  EXITING = \"exiting\",\n  EXITED = \"exited\",\n  ENTER = \"enter\",\n  ENTERING = \"entering\",\n  ENTERED = \"entered\",\n}\n\nexport type TransitionConfig = {\n  from?: string;\n  to?: string;\n  data?: any;\n};\n\ntype Store = {\n  transitionStateTo: TransitionState;\n  transitionStateFrom: TransitionState;\n  transitionConfig: TransitionConfig | null;\n  exitDone: () => void;\n  enterDone: () => void;\n  from: string | null;\n  to: string | null;\n  data: any;\n  onEnteringCount: number;\n  onExitingCount: number;\n  applyTransitionConfig: () => void;\n};\n\nconst store = create<Store>((set) => ({\n  transitionStateTo: TransitionState.SUSPENDED,\n  transitionStateFrom: TransitionState.SUSPENDED,\n  transitionConfig: null,\n  exitDone: () => {},\n  enterDone: () => {},\n  from: null,\n  to: null,\n  data: null,\n  onEnteringCount: 0,\n  onExitingCount: 0,\n  applyTransitionConfig: () =>\n    set((state) => ({\n      data: state.transitionConfig?.data,\n      transitionConfig: null,\n    })),\n}));\n\nconst useStore = createHook<Store>(store);\n\nexport { store, useStore };\n","import { ReactNode, useLayoutEffect, createContext, useMemo } from \"react\";\n\nexport const PageContext = createContext(\"both\");\n","import { store, useStore } from \"./store\";\nimport { useLayoutEffect, useContext } from \"react\";\n\nimport { PageContext } from \"./context\";\n\ninterface usePageTransitionProps {\n  onAppear?: (state?: { data?: any }) => void;\n  onAppearing?: (state?: { data?: any; done: () => void }) => void;\n  onAppeared?: (state?: { data?: any }) => void;\n  onEnter?: (state?: { from: string | null; data?: any }) => void;\n  onEntering?: (state?: {\n    from: string | null;\n    to: string | null;\n    data?: any;\n    done: () => void;\n  }) => void;\n  onEntered?: (state?: { from: string | null; data?: any }) => void;\n  onExit?: (state?: { to: string | null; data?: any }) => void;\n  onExiting?: (state?: {\n    from: string | null;\n    to: string | null;\n    data?: any;\n    done: () => void;\n  }) => void;\n}\n\nexport function usePageTransition({\n  onAppear,\n  onAppearing,\n  onAppeared,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n}: usePageTransitionProps = {}) {\n  const pageContext = useContext(PageContext);\n  const transitionStateTo = useStore((s) => s.transitionStateTo);\n  const transitionStateFrom = useStore((s) => s.transitionStateFrom);\n\n  const enterDone = useStore((s) => s.enterDone);\n  const exitDone = useStore((s) => s.exitDone);\n  const from = useStore((s) => s.from);\n  const to = useStore((s) => s.to);\n  const data = useStore((s) => s.data);\n\n  const isEnteringPage = pageContext === store.getState().to;\n  const isExitingPage = pageContext === store.getState().from;\n\n  // keep track of registered callbacks\n  useLayoutEffect(() => {\n    if (isEnteringPage && !!onEntering) {\n      store.setState({ onEnteringCount: store.getState().onEnteringCount + 1 });\n    }\n    return () => {\n      if (isEnteringPage && !!onEntering) {\n        store.setState({\n          onEnteringCount: store.getState().onEnteringCount - 1,\n        });\n      }\n    };\n  }, [isEnteringPage, onEntering]);\n\n  // keep track of registered callbacks\n  useLayoutEffect(() => {\n    if (isExitingPage && !!onExiting) {\n      store.setState({ onExitingCount: store.getState().onExitingCount + 1 });\n    }\n    return () => {\n      if (isExitingPage && !!onExiting) {\n        store.setState({\n          onExitingCount: store.getState().onExitingCount - 1,\n        });\n      }\n    };\n  }, [isExitingPage, onExiting]);\n\n  // Trigger callbacks on \"to\" page\n  useLayoutEffect(\n    function triggerEnterCallbacks() {\n      if (isEnteringPage) {\n        if (transitionStateTo === \"appear\") {\n          onAppear?.();\n        } else if (transitionStateTo === \"appearing\") {\n          onAppearing?.({ done: enterDone });\n        } else if (transitionStateTo === \"appeared\") {\n          onAppeared?.();\n        } else if (transitionStateTo === \"enter\") {\n          onEnter?.({ from: store.getState().from });\n        } else if (transitionStateTo === \"entering\") {\n          onEntering?.({\n            from: store.getState().from,\n            to: store.getState().to,\n            done: enterDone,\n            data: store.getState().data,\n          });\n        } else if (transitionStateTo === \"entered\") {\n          onEntered?.({ from: store.getState().from });\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [transitionStateTo] // only trigger on transition state change\n  );\n\n  // Trigger exirt callbacks on \"from\" page\n  useLayoutEffect(\n    function triggerExitCallbacks() {\n      if (isExitingPage) {\n        if (transitionStateFrom === \"exit\") {\n          onExit?.({ to: store.getState().to });\n        } else if (transitionStateFrom === \"exiting\") {\n          onExiting?.({\n            from: store.getState().from,\n            to: store.getState().to,\n            done: exitDone,\n            data: store.getState().data,\n          });\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [transitionStateFrom] // only trigger on transition state change\n  );\n\n  // Return state from hook\n  if (pageContext === \"both\") {\n    // hook used outside of page context\n    return {\n      transitionStateTo,\n      transitionStateFrom,\n      from,\n      to,\n      data,\n    };\n  } else {\n    // hook used inside a page context\n    return {\n      transitionState: isEnteringPage ? transitionStateTo : transitionStateFrom,\n      from,\n      to,\n      data,\n    };\n  }\n}\n","export function pathToHypen(path: string) {\n  const h = path.replace(/\\//g, \"-\");\n  return h.startsWith(\"-\") ? h.substring(1) : h;\n}\n","import { ReactNode, useRef, Suspense } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport { PageContext } from \"./context\";\nimport { store, TransitionState } from \"./store\";\nimport { pathToHypen } from \"./utils\";\n\ninterface PageWrapperProps {\n  children: ReactNode;\n  pathname: string; // used as unique pathname\n  className?: string;\n  timeout?: number | { enter?: number; exit?: number; appear?: number };\n  detectAnimationEnd?: boolean;\n  detectTransitionEnd?: boolean;\n  onEnter?: () => void;\n  onEntering?: () => void;\n  onEntered?: () => void;\n  onExit?: () => void;\n  onExiting?: () => void;\n  onExited?: () => void;\n}\n\nexport function PageWrapper({\n  children,\n  pathname,\n  className,\n  timeout,\n  detectAnimationEnd,\n  detectTransitionEnd,\n  ...props\n}: PageWrapperProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const isFirstAppear = !store.getState().from;\n\n  const Fallback = () => {\n    return (\n      <div\n        className={`${className} ${className}-${pathToHypen(\n          pathname\n        )} ${className}-${isFirstAppear ? \"appear\" : \"enter\"}-suspended`}\n      />\n    );\n  };\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <CSSTransition\n        nodeRef={ref}\n        key={pathname}\n        addEndListener={(done: () => void) => {\n          if (!ref.current) return;\n\n          // are we the entering page or leaving page?\n          const isEnteringPage = pathname === store.getState().to;\n          const isExitingPage = pathname === store.getState().from;\n\n          // Attachs CSS listeners unless user has registered callbacks\n          if (\n            (isEnteringPage && store.getState().onEnteringCount === 0) ||\n            (isExitingPage && store.getState().onExitingCount === 0)\n          ) {\n            if (detectAnimationEnd) {\n              ref.current.addEventListener(\"animationend\", done, false);\n            }\n            if (detectTransitionEnd) {\n              ref.current.addEventListener(\"transitionend\", done, false);\n            }\n          }\n\n          if (isEnteringPage) {\n            store.setState({ enterDone: done });\n          } else if (isExitingPage) {\n            store.setState({ exitDone: done });\n          }\n        }}\n        timeout={timeout}\n        classNames={className}\n        appear={true}\n        unmountOnExit\n        {...props}\n        onEnter={(isAppearing) => {\n          store.setState({\n            transitionStateTo: isAppearing\n              ? TransitionState.APPEAR\n              : TransitionState.ENTER,\n          });\n          if (props.onEnter) props.onEnter();\n        }}\n        onEntering={(isAppearing) => {\n          store.setState({\n            transitionStateTo: isAppearing\n              ? TransitionState.APPEARING\n              : TransitionState.ENTERING,\n          });\n          if (props.onEntering) props.onEntering();\n        }}\n        onEntered={(isAppearing) => {\n          store.setState({\n            transitionStateTo: isAppearing\n              ? TransitionState.APPEARED\n              : TransitionState.ENTERED,\n          });\n          if (props.onEntered) props.onEntered();\n        }}\n        onExit={() => {\n          store.setState({ transitionStateFrom: TransitionState.EXIT });\n          if (props.onExit) props.onExit();\n        }}\n        onExiting={() => {\n          store.setState({ transitionStateFrom: TransitionState.EXITING });\n          if (props.onExiting) props.onExiting();\n        }}\n        onExited={() => {\n          store.setState({ transitionStateFrom: TransitionState.EXITED });\n          if (props.onExited) props.onExited();\n        }}\n      >\n        <div\n          className={`${className} ${className}-${pathToHypen(pathname)}`}\n          ref={ref}\n        >\n          export{\" \"}\n          <PageContext.Provider value={pathname}>\n            {children}\n            export{\" \"}\n          </PageContext.Provider>\n        </div>\n      </CSSTransition>\n    </Suspense>\n  );\n}\n","import { ReactNode, useLayoutEffect, useMemo } from \"react\";\nimport { SwitchTransition, TransitionGroup } from \"react-transition-group\";\n\nimport { store, TransitionState, TransitionConfig } from \"./store\";\nimport { PageWrapper } from \"./PageWrapper\";\n\nexport type TransitionMode = \"out-in\" | \"in-out\" | \"sync\";\n\ninterface PageTransitionProps {\n  children: ReactNode;\n  pageName: string; // used as unique pathname\n  mode?: TransitionMode;\n  className?: string;\n  timeout?: number | { enter?: number; exit?: number; appear?: number };\n  detectAnimationEnd?: boolean;\n  detectTransitionEnd?: boolean;\n}\n\nexport function PageTransitions({\n  children,\n  pageName,\n  mode = \"out-in\",\n  className = \"page\",\n  timeout,\n  detectAnimationEnd = true,\n  detectTransitionEnd = true,\n}: PageTransitionProps) {\n  const pathname = pageName;\n\n  useMemo(() => {\n    // update store.to before next child render\n    store.getState().to = pathname;\n    store.getState().transitionStateTo = TransitionState.SUSPENDED;\n    store.getState().transitionStateFrom = TransitionState.SUSPENDED;\n  }, [pathname]);\n\n  // entering pathname\n  useLayoutEffect(() => {\n    // can we use setState instead of raw access in useMemo above?\n    // store.setState({\n    //   to: pathname,\n    //   transitionStateTo: \"mount\",\n    //   transitionStateFrom: \"mount\"\n    // });\n\n    // set temporary transtion data for this navigation\n    store.getState().applyTransitionConfig();\n\n    return () => {\n      // leaving pathname\n      store.setState({ from: pathname });\n    };\n  }, [pathname]);\n\n  function renderPage() {\n    return (\n      <PageWrapper\n        key={pathname}\n        pathname={pathname}\n        className={className}\n        timeout={timeout}\n        detectAnimationEnd={detectAnimationEnd}\n        detectTransitionEnd={detectTransitionEnd}\n      >\n        {children}\n      </PageWrapper>\n    );\n  }\n\n  function renderSwitchTransition(mode: \"out-in\" | \"in-out\") {\n    return <SwitchTransition mode={mode}>{renderPage()}</SwitchTransition>;\n  }\n\n  function renderSyncTransition() {\n    return (\n      <TransitionGroup component={null} appear enter exit>\n        {renderPage()}\n      </TransitionGroup>\n    );\n  }\n\n  return (\n    <>\n      {mode === \"sync\" ? renderSyncTransition() : renderSwitchTransition(mode)}\n    </>\n  );\n}\n\nexport function setPageTransitionData(data: any) {\n  store.setState({ transitionConfig: { data } });\n}\n"],"names":["TransitionState","store","create","set","transitionStateTo","SUSPENDED","transitionStateFrom","transitionConfig","exitDone","enterDone","from","to","data","onEnteringCount","onExitingCount","applyTransitionConfig","state","_state$transitionConf","useStore","createHook","PageContext","createContext","usePageTransition","onAppear","onAppearing","onAppeared","onEnter","onEntering","onEntered","onExit","onExiting","pageContext","useContext","s","isEnteringPage","getState","isExitingPage","useLayoutEffect","setState","done","transitionState","pathToHypen","path","h","replace","startsWith","substring","children","pathname","className","timeout","detectAnimationEnd","detectTransitionEnd","_ref","props","_objectWithoutPropertiesLoose","_excluded","ref","useRef","isFirstAppear","_jsx","Suspense","fallback","CSSTransition","_extends","nodeRef","addEndListener","current","addEventListener","classNames","appear","unmountOnExit","isAppearing","APPEAR","ENTER","APPEARING","ENTERING","APPEARED","ENTERED","EXIT","EXITING","onExited","EXITED","_jsxs","Provider","value","pageName","mode","renderPage","PageWrapper","useMemo","_Fragment","TransitionGroup","component","enter","exit","SwitchTransition","renderSwitchTransition","setPageTransitionData"],"mappings":"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"}