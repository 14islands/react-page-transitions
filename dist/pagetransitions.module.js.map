{"version":3,"file":"pagetransitions.module.js","sources":["../src/enums.ts","../src/store.ts","../src/useIsomorphicLayoutEffect.ts","../src/context.ts","../src/usePageTransition.tsx","../src/utils.ts","../src/PageWrapper.tsx","../src/PageTransitions.tsx"],"sourcesContent":["// https://ncjamieson.com/dont-export-const-enums/\nexport enum TransitionState {\n  SUSPENDED = \"suspended\", // waiting to mount or suspended\n  APPEAR = \"appear\",\n  APPEARING = \"appearing\",\n  APPEARED = \"appeared\",\n  EXIT = \"exit\",\n  EXITING = \"exiting\",\n  EXITED = \"exited\",\n  ENTER = \"enter\",\n  ENTERING = \"entering\",\n  ENTERED = \"entered\",\n}\n","import create from \"zustand/vanilla\";\nimport createHook from \"zustand\";\n\nimport { TransitionState } from \"./enums\";\n\nexport type TransitionConfig = {\n  from?: string;\n  to?: string;\n  data?: any;\n};\n\ntype Store = {\n  transitionStateTo: TransitionState;\n  transitionStateFrom: TransitionState;\n  transitionConfig: TransitionConfig | null;\n  exitDone: () => void;\n  enterDone: () => void;\n  from: string | null;\n  to: string | null;\n  data: any;\n  onEnteringCount: number;\n  onExitingCount: number;\n  applyTransitionConfig: () => void;\n  suspendedRoute: string | null;\n};\n\nconst store = create<Store>((set) => ({\n  transitionStateTo: TransitionState.SUSPENDED,\n  transitionStateFrom: TransitionState.SUSPENDED,\n  transitionConfig: null,\n  exitDone: () => {},\n  enterDone: () => {},\n  from: null,\n  to: null,\n  data: null,\n  onEnteringCount: 0,\n  onExitingCount: 0,\n  applyTransitionConfig: () =>\n    set((state) => ({\n      data: state.transitionConfig?.data,\n      transitionConfig: null,\n    })),\n  suspendedRoute: null,\n}));\n\nconst useStore = createHook<Store>(store);\n\nexport { store, useStore };\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from \"react\";\n\nexport const isBrowser = typeof window !== \"undefined\";\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect;\n\nexport default useLayoutEffect;\n","import { ReactNode, useLayoutEffect, createContext, useMemo } from \"react\";\n\nexport const PageContext = createContext(\"both\");\n","import { store, useStore } from \"./store\";\nimport { useContext } from \"react\";\n\nimport { useLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { PageContext } from \"./context\";\n\ninterface usePageTransitionProps {\n  onAppear?: (state?: { data?: any }) => void;\n  onAppearing?: (state?: { data?: any; done: () => void }) => void;\n  onAppeared?: (state?: { data?: any }) => void;\n  onEnter?: (state?: { from: string | null; data?: any }) => void;\n  onEntering?: (state?: {\n    from: string | null;\n    to: string | null;\n    data?: any;\n    done: () => void;\n  }) => void;\n  onEntered?: (state?: { from: string | null; data?: any }) => void;\n  onExit?: (state?: { to: string | null; data?: any }) => void;\n  onExiting?: (state?: {\n    from: string | null;\n    to: string | null;\n    data?: any;\n    done: () => void;\n  }) => void;\n}\n\nexport function usePageTransition({\n  onAppear,\n  onAppearing,\n  onAppeared,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n}: usePageTransitionProps = {}) {\n  const pageContext = useContext(PageContext);\n  const transitionStateTo = useStore((s) => s.transitionStateTo);\n  const transitionStateFrom = useStore((s) => s.transitionStateFrom);\n\n  const enterDone = useStore((s) => s.enterDone);\n  const exitDone = useStore((s) => s.exitDone);\n  const from = useStore((s) => s.from);\n  const to = useStore((s) => s.to);\n  const data = useStore((s) => s.data);\n\n  const isEnteringPage = pageContext === store.getState().to;\n  const isExitingPage = pageContext === store.getState().from;\n\n  // keep track of registered callbacks\n  useLayoutEffect(() => {\n    if (isEnteringPage && !!onEntering) {\n      store.setState({ onEnteringCount: store.getState().onEnteringCount + 1 });\n    }\n    return () => {\n      if (isEnteringPage && !!onEntering) {\n        store.setState({\n          onEnteringCount: store.getState().onEnteringCount - 1,\n        });\n      }\n    };\n  }, [isEnteringPage, onEntering]);\n\n  // keep track of registered callbacks\n  useLayoutEffect(() => {\n    if (isExitingPage && !!onExiting) {\n      store.setState({ onExitingCount: store.getState().onExitingCount + 1 });\n    }\n    return () => {\n      if (isExitingPage && !!onExiting) {\n        store.setState({\n          onExitingCount: store.getState().onExitingCount - 1,\n        });\n      }\n    };\n  }, [isExitingPage, onExiting]);\n\n  // Trigger callbacks on \"to\" page\n  useLayoutEffect(\n    function triggerEnterCallbacks() {\n      if (isEnteringPage) {\n        if (transitionStateTo === \"appear\") {\n          onAppear?.();\n        } else if (transitionStateTo === \"appearing\") {\n          onAppearing?.({ done: enterDone });\n        } else if (transitionStateTo === \"appeared\") {\n          onAppeared?.();\n        } else if (transitionStateTo === \"enter\") {\n          onEnter?.({ from: store.getState().from });\n        } else if (transitionStateTo === \"entering\") {\n          onEntering?.({\n            from: store.getState().from,\n            to: store.getState().to,\n            done: enterDone,\n            data: store.getState().data,\n          });\n        } else if (transitionStateTo === \"entered\") {\n          onEntered?.({ from: store.getState().from });\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [transitionStateTo] // only trigger on transition state change\n  );\n\n  // Trigger exirt callbacks on \"from\" page\n  useLayoutEffect(\n    function triggerExitCallbacks() {\n      if (isExitingPage) {\n        if (transitionStateFrom === \"exit\") {\n          onExit?.({ to: store.getState().to });\n        } else if (transitionStateFrom === \"exiting\") {\n          onExiting?.({\n            from: store.getState().from,\n            to: store.getState().to,\n            done: exitDone,\n            data: store.getState().data,\n          });\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [transitionStateFrom] // only trigger on transition state change\n  );\n\n  // Return state from hook\n  if (pageContext === \"both\") {\n    // hook used outside of page context\n    return {\n      transitionStateTo,\n      transitionStateFrom,\n      from,\n      to,\n      data,\n    };\n  } else {\n    // hook used inside a page context\n    return {\n      transitionState: isEnteringPage ? transitionStateTo : transitionStateFrom,\n      from,\n      to,\n      data,\n    };\n  }\n}\n","export function pathToHypen(path: string) {\n  const h = path.replace(/\\//g, \"-\");\n  return h.startsWith(\"-\") ? h.substring(1) : h;\n}\n","import { ReactNode, useRef, Suspense, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport { TransitionState } from \"./enums\";\nimport { PageContext } from \"./context\";\nimport { store } from \"./store\";\nimport { pathToHypen } from \"./utils\";\n\ninterface PageWrapperProps {\n  children: ReactNode;\n  pathname: string; // used as unique pathname\n  className?: string;\n  timeout?: number | { enter?: number; exit?: number; appear?: number };\n  detectAnimationEnd?: boolean;\n  detectTransitionEnd?: boolean;\n  onEnter?: () => void;\n  onEntering?: () => void;\n  onEntered?: () => void;\n  onExit?: () => void;\n  onExiting?: () => void;\n  onExited?: () => void;\n}\n\nconst Fallback = ({\n  pathname,\n  className,\n}: {\n  pathname: string;\n  className?: string;\n}) => {\n  const isFirstAppear = !store.getState().from;\n  // keep track of suspended status\n  useEffect(() => {\n    store.setState({ suspendedRoute: pathname });\n    return () => {\n      store.setState({ suspendedRoute: null });\n    };\n  }, []);\n  return (\n    <div\n      className={`${className} ${className}-${pathToHypen(\n        pathname\n      )} ${className}-${isFirstAppear ? \"appear\" : \"enter\"}-suspended`}\n    />\n  );\n};\n\nexport function PageWrapper({\n  children,\n  pathname,\n  className,\n  timeout,\n  detectAnimationEnd,\n  detectTransitionEnd,\n  ...props\n}: PageWrapperProps) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  return (\n    <Suspense fallback={<Fallback pathname={pathname} className={className} />}>\n      <CSSTransition\n        nodeRef={ref}\n        key={pathname}\n        addEndListener={(done: () => void) => {\n          if (!ref.current) return;\n\n          // are we the entering page or leaving page?\n          const isEnteringPage = pathname === store.getState().to;\n          const isExitingPage = pathname === store.getState().from;\n\n          // Attachs CSS listeners unless user has registered callbacks\n          if (\n            (isEnteringPage && store.getState().onEnteringCount === 0) ||\n            (isExitingPage && store.getState().onExitingCount === 0)\n          ) {\n            if (detectAnimationEnd) {\n              ref.current.addEventListener(\"animationend\", done, false);\n            }\n            if (detectTransitionEnd) {\n              ref.current.addEventListener(\"transitionend\", done, false);\n            }\n          }\n\n          if (isEnteringPage) {\n            store.setState({ enterDone: done });\n          } else if (isExitingPage) {\n            store.setState({ exitDone: done });\n          }\n        }}\n        timeout={timeout}\n        classNames={className}\n        appear={true}\n        unmountOnExit\n        {...props}\n        onEnter={(isAppearing) => {\n          store.setState({\n            transitionStateTo: isAppearing\n              ? TransitionState.APPEAR\n              : TransitionState.ENTER,\n          });\n          if (props.onEnter) props.onEnter();\n        }}\n        onEntering={(isAppearing) => {\n          store.setState({\n            transitionStateTo: isAppearing\n              ? TransitionState.APPEARING\n              : TransitionState.ENTERING,\n          });\n          if (props.onEntering) props.onEntering();\n        }}\n        onEntered={(isAppearing) => {\n          store.setState({\n            transitionStateTo: isAppearing\n              ? TransitionState.APPEARED\n              : TransitionState.ENTERED,\n          });\n          if (props.onEntered) props.onEntered();\n        }}\n        onExit={() => {\n          store.setState({ transitionStateFrom: TransitionState.EXIT });\n          if (props.onExit) props.onExit();\n        }}\n        onExiting={() => {\n          store.setState({ transitionStateFrom: TransitionState.EXITING });\n          if (props.onExiting) props.onExiting();\n        }}\n        onExited={() => {\n          store.setState({ transitionStateFrom: TransitionState.EXITED });\n          if (props.onExited) props.onExited();\n        }}\n      >\n        <div\n          className={`${className} ${className}-${pathToHypen(pathname)}`}\n          ref={ref}\n        >\n          <PageContext.Provider value={pathname}>\n            {children}\n          </PageContext.Provider>\n        </div>\n      </CSSTransition>\n    </Suspense>\n  );\n}\n","import { Fragment, ReactNode, useMemo, useState } from \"react\";\nimport { SwitchTransition, TransitionGroup } from \"react-transition-group\";\n\nimport { useLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { TransitionState } from \"./enums\";\nimport { store } from \"./store\";\nimport { PageWrapper } from \"./PageWrapper\";\n\nexport type TransitionMode = \"out-in\" | \"in-out\" | \"sync\";\n\ninterface PageTransitionProps {\n  children: ReactNode;\n  pageName: string; // used as unique pathname\n  mode?: TransitionMode;\n  className?: string;\n  timeout?: number | { enter?: number; exit?: number; appear?: number };\n  detectAnimationEnd?: boolean;\n  detectTransitionEnd?: boolean;\n}\n\nexport function PageTransitions({\n  children,\n  pageName,\n  mode = \"out-in\",\n  className = \"page\",\n  timeout,\n  detectAnimationEnd = true,\n  detectTransitionEnd = true,\n}: PageTransitionProps) {\n  const pathname = pageName;\n\n  useMemo(() => {\n    // update store.to before next child render\n    store.getState().to = pathname;\n    store.getState().transitionStateTo = TransitionState.SUSPENDED;\n    store.getState().transitionStateFrom = TransitionState.SUSPENDED;\n  }, [pathname]);\n\n  // entering pathname\n  useLayoutEffect(() => {\n    // set temporary transtion data for this navigation\n    store.getState().applyTransitionConfig();\n\n    return () => {\n      // leaving pathname\n      store.setState({ from: pathname });\n    };\n  }, [pathname]);\n\n  function renderPage() {\n    return (\n      <PageWrapper\n        key={pathname}\n        pathname={pathname}\n        className={className}\n        timeout={timeout}\n        detectAnimationEnd={detectAnimationEnd}\n        detectTransitionEnd={detectTransitionEnd}\n      >\n        {children}\n      </PageWrapper>\n    );\n  }\n\n  function renderSwitchTransition(mode: \"out-in\" | \"in-out\") {\n    return <SwitchTransition mode={mode}>{renderPage()}</SwitchTransition>;\n  }\n\n  function renderSyncTransition() {\n    return (\n      <TransitionGroup component={null} appear enter exit>\n        {renderPage()}\n      </TransitionGroup>\n    );\n  }\n\n  // Workaround: reset if user navigates while page is suspended\n  const [key, setKey] = useState(0);\n  useLayoutEffect(() => {\n    const suspendedRoute = store.getState().suspendedRoute;\n    if (!!suspendedRoute && pathname !== suspendedRoute) {\n      // Force a remout of react-transition-group\n      setKey(key + 1);\n    }\n  }, [pathname, key, setKey]);\n\n  return (\n    <Fragment key={key}>\n      {mode === \"sync\" ? renderSyncTransition() : renderSwitchTransition(mode)}\n    </Fragment>\n  );\n}\n\nexport function setPageTransitionData(data: any) {\n  store.setState({ transitionConfig: { data } });\n}\n"],"names":["TransitionState","store","create","set","transitionStateTo","SUSPENDED","transitionStateFrom","transitionConfig","exitDone","enterDone","from","to","data","onEnteringCount","onExitingCount","applyTransitionConfig","state","_state$transitionConf","suspendedRoute","useStore","createHook","useLayoutEffect","window","vanillaUseLayoutEffect","useEffect","PageContext","createContext","_temp","_ref","onAppear","onAppearing","onAppeared","onEnter","onEntering","onEntered","onExit","onExiting","useContext","s","pageContext","getState","isExitingPage","isEnteringPage","setState","done","transitionState","pathToHypen","path","h","replace","startsWith","substring","_excluded","Fallback","pathname","className","isFirstAppear","_jsx","children","timeout","_ref2","detectAnimationEnd","detectTransitionEnd","props","_objectWithoutPropertiesLoose","ref","useRef","Suspense","fallback","CSSTransition","_extends","nodeRef","addEndListener","current","addEventListener","classNames","appear","unmountOnExit","isAppearing","APPEAR","ENTER","APPEARING","ENTERING","APPEARED","ENTERED","EXIT","EXITING","onExited","EXITED","Provider","value","PageTransitions","mode","_ref$mode","_ref$className","_ref$detectAnimationE","_ref$detectTransition","pageName","renderPage","PageWrapper","useMemo","_useState","useState","key","setKey","Fragment","TransitionGroup","component","enter","exit","SwitchTransition","renderSwitchTransition","setPageTransitionData"],"mappings":"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"}